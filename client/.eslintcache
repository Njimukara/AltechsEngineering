[{"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\index.js":"1","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\reportWebVitals.js":"2","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\App.js":"3","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Home.js":"4","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Login.js":"5","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Services.js":"6","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Register.js":"7","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ProjectList.js":"8","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Employees.js":"9","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Header.js":"10","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ProjectDetails.js":"11","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Project.js":"12","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\StateProvider.js":"13","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ProjectData.js":"14","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Reducer.js":"15","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\AddProject.js":"16","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\UpdateProject.js":"17","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\EmployeeTable.js":"18","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Clients.js":"19","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ClientTable.js":"20"},{"size":802,"mtime":1610025608954,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1481,"mtime":1611743349894,"results":"24","hashOfConfig":"22"},{"size":231,"mtime":1611564112119,"results":"25","hashOfConfig":"22"},{"size":3942,"mtime":1611756069905,"results":"26","hashOfConfig":"22"},{"size":3595,"mtime":1611748570420,"results":"27","hashOfConfig":"22"},{"size":5803,"mtime":1612175958590,"results":"28","hashOfConfig":"22"},{"size":1485,"mtime":1611565845026,"results":"29","hashOfConfig":"22"},{"size":1938,"mtime":1611757936286,"results":"30","hashOfConfig":"22"},{"size":2064,"mtime":1611748826189,"results":"31","hashOfConfig":"22"},{"size":15039,"mtime":1611746971999,"results":"32","hashOfConfig":"22"},{"size":1747,"mtime":1610109041462,"results":"33","hashOfConfig":"22"},{"size":485,"mtime":1609147221411,"results":"34","hashOfConfig":"22"},{"size":2878,"mtime":1611565693658,"results":"35","hashOfConfig":"22"},{"size":731,"mtime":1611153058254,"results":"36","hashOfConfig":"22"},{"size":5720,"mtime":1611238800484,"results":"37","hashOfConfig":"22"},{"size":6461,"mtime":1612172494772,"results":"38","hashOfConfig":"22"},{"size":978,"mtime":1612178018486,"results":"39","hashOfConfig":"22"},{"size":1859,"mtime":1612177938951,"results":"40","hashOfConfig":"22"},{"size":829,"mtime":1612177889250,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"15cb7en",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\index.js",[],["91","92"],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\reportWebVitals.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\App.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Home.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Login.js",["93","94"],"import React, { useState } from 'react';\r\nimport './Login.css'\r\nimport { Link , useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [ {user}, dispatch ] = useStateValue();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [Account_Type, setAccount_Type] = useState(\"\");\r\n\r\n    let history = useHistory();\r\n\r\n    const login = (e) => {\r\n        e.preventDefault()\r\n        if (Account_Type ===\"Client\") {\r\n            Axios.post(\"http://localhost:3001/api/client/login\", {\r\n            email: email,\r\n            password: password,\r\n            }).then((response) => {\r\n            if (response.data.LoggedIn == true) {\r\n                window.localStorage.setItem(\"loggedIn\", response.data.LoggedIn);\r\n                window.localStorage.setItem(\"name\", response.data.name);\r\n                window.localStorage.setItem(\"id\", response.data.id);\r\n                window.localStorage.setItem(\"type\", response.data.Account_type);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    item: {\r\n                        user: response.data.email\r\n                    }\r\n                })\r\n                console.log(user)\r\n                history.push('/');\r\n            } else {\r\n                setErrorMessage(response.data.message);\r\n            }\r\n            });\r\n        } else {\r\n            Axios.post(\"http://localhost:3001/api/employee/login\", {\r\n            email: email,\r\n            password: password,\r\n            }).then((response) => {\r\n            if (response.data.LoggedIn == true) {\r\n                window.localStorage.setItem(\"loggedIn\", response.data.LoggedIn);\r\n                window.localStorage.setItem(\"name\", response.data.name);\r\n                window.localStorage.setItem(\"id\", response.data.id);\r\n                window.localStorage.setItem(\"type\", response.data.Account_type);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    item: {\r\n                        user: response.data.email\r\n                    }\r\n                })\r\n                console.log(user)\r\n                history.push('/projects');\r\n            } else {\r\n                setErrorMessage(response.data.message);\r\n            }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className=\"login__card\">\r\n                <div className=\"login__card_logo\">\r\n                    <Link className='logo__cardImage' to='/'><img src=\"assets/images/logo-minimal-md.png\" alt=\"Altechs Engineering logo\"/></Link>\r\n                    <h2>Sign In</h2>\r\n                </div>\r\n                <form className=\"login__card_form\"  >\r\n                    <label>Choose Account Type</label>\r\n                    <select onChange={(event) => {\r\n                        setAccount_Type(event.target.value);}} name=\"project_type\">\r\n                        <option> -- Select -- </option>\r\n                        <option value=\"Client\">Client Sign In</option>\r\n                        <option value=\"Employee\">Emloyee Sign In</option>\r\n                    </select>\r\n\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"text\" placeholder='youremail@mail.com' onChange={(event) => {\r\n                    setEmail(event.target.value);}}/>\r\n\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" onChange={(event) => {\r\n                    setPassword(event.target.value); }}/>\r\n                    <button type='submit' onClick={login}>Sign in</button>\r\n                    <h6 style={{ color: \"red\" }}>{errorMessage} </h6>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Services.js",["95","96","97","98"],"import React, { useEffect, useState } from 'react';\r\nimport './Services.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useStateValue } from './StateProvider';\r\nimport Axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Services() {\r\n\r\n    const [ basket, setBasket ] = useState([]);\r\n    const [ {projects}, dispatch ] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        // getProjects();\r\n        getProject(); \r\n        window.addEventListener(\"beforeunload\", alertUser);\r\n        return () => {\r\n        window.removeEventListener(\"beforeunload\", alertUser);\r\n        }\r\n    }, []);\r\n\r\n    const alertUser = (e) => {\r\n        e.preventDefault();\r\n        e.returnValue = \"\";\r\n    };\r\n    const authors_id = window.localStorage.getItem('id')\r\n\r\n    const getProject = (id) => {\r\n        id = authors_id\r\n        Axios.get(`http://localhost:3001/api/client/projects/${id}`)\r\n        .then((response) => {\r\n            console.log(response)\r\n            const basketData = response.data\r\n            setBasket(basketData)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n\r\n    const getProjects = () => {\r\n        Axios.get(\"http://localhost:3001/api/projects\")\r\n        .then((response) => {\r\n            const basketData = response.data\r\n            setBasket(basketData)\r\n            dispatch({\r\n                type: 'SET_PROJECTS',\r\n                item: {\r\n                    projects: response.data\r\n                }\r\n            })\r\n        })\r\n        .catch (err => {\r\n            console.log(err)\r\n        })\r\n        return basket\r\n    };\r\n\r\n    return (\r\n        <section className=\"service\">\r\n            <div className=\"service__column1\">\r\n                <div className=\"service__cards\">\r\n                {basket.slice(0, 3).map(project => (\r\n                    <Card  className='service__card'>\r\n                        <Card.Img className='service__card_img' variant=\"top\" src=\"/assets/images/software engineering.jpg\" />\r\n                        <Card.Body>\r\n                            <Card.Title className='service__card_title'>{project.Project_Name}</Card.Title>\r\n                            <Card.Text className='service__card_text'>\r\n                            {project.Project_Description}\r\n                            </Card.Text>\r\n                            <Link to={{pathname: `/projectdetails/${project.Project_Id}`, state: `project_id=${project.Project_Id}`}}> <button >View Details</button></Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))}   \r\n                </div>\r\n                <div className=\"service__cards\">\r\n                {basket.slice(4, 7).map(project => (\r\n                    <Card  className='service__card'>\r\n                        <Card.Img className='service__card_img' variant=\"top\" src=\"/assets/images/software engineering.jpg\" />\r\n                        <Card.Body>\r\n                            <Card.Title className='service__card_title'>{project.Project_Name}</Card.Title>\r\n                            <Card.Text numberOfLines={1} className='service__card_text'>\r\n                            {project.Project_Description.lenght}\r\n                            </Card.Text>\r\n                            <Link to={{pathname: `/projectdetails/${project.Project_Id}`}}> <button >View Details</button></Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))}   \r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Register.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ProjectList.js",["99","100"],"import React, { useState, useEffect } from 'react'\r\nimport './ProjectList.css'\r\nimport Axios from 'axios';\r\nimport ProjectData from './ProjectData';\r\nimport { Link } from 'react-router-dom';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\n\r\n\r\nfunction ProjectList() {\r\n    const [basket, setBasket] = useState([]);\r\n    const [AccountType, setAccountType] = useState('');\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    const getProjects = () => {\r\n        Axios.get(\"http://localhost:3001/api/projects\")\r\n        .then((response) => {\r\n            const basketData = response.data\r\n            setBasket(basketData)\r\n            setAccountType(window.localStorage.getItem('type'))\r\n        })\r\n        .catch (err => {\r\n            console.log(err)\r\n        })\r\n\r\n        return basket\r\n    };\r\n\r\n    return (\r\n        <div className='projectList'>\r\n        {AccountType === 'Employee' && <Link to='/newproject'>\r\n            <button className='projectList__button'>Ajouter Un Projet</button></Link>}\r\n            <h3 className='projectList__heading'>All Projects</h3>\r\n            {basket.map(project => (\r\n                <ProjectData\r\n                    Project_Id = {project.Project_Id}\r\n                    Project_Title = {project.Project_Name}\r\n                    Project_Description = {project.Project_Description}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList\r\n","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Employees.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Header.js",["101"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n    const [ login, setLogin ] = useState([]);\r\n    const [ accountType, setAccountType ] = useState([]);\r\n    const [ Name, setName ] = useState('');\r\n    const authenticate = () => {\r\n        setLogin(window.localStorage.getItem('loggedIn'))\r\n        setAccountType(window.localStorage.getItem('type'))\r\n        setName(window.localStorage.getItem('name'))\r\n    }\r\n\r\n    const handleAuthentication = () => {\r\n        if (login) {\r\n            window.localStorage.clear()\r\n            window.location.reload()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        authenticate();\r\n    }, []);\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div className='header__image'>\r\n                <Link className='header__logo_image' to='/'><img className=\"header__logo\" src=\"/assets/images/logo-minimal-md.png\" alt=\"Altechs Engineering Logo\"/>\r\n                <span>Altechs Engineering</span></Link>\r\n            </div>\r\n\r\n            <div className=\"header__nav\">\r\n               <ul className='header__ul'>\r\n                   {accountType === 'Client' && <li><Link to='/' className='links'>Accueil</Link></li>}\r\n                   {accountType === 'Employee' && <li><Link to='/projects' className='links'>Projets</Link></li>}\r\n                   {accountType === 'Employee' && <li><Link to='/employees' className='links'>Employés</Link></li>}\r\n                   {accountType === 'Employee' && <li><Link to='/clients' className='links'>Clients</Link></li>}\r\n               </ul> \r\n            </div>\r\n\r\n            <div className=\"header__signin\">\r\n                <Link className='header__login' onClick={handleAuthentication} to={!login && '/login'}><span>{login ? 'Log Out' : 'Sign In'}</span></Link><span className='header__space'>/</span>\r\n                <Link className='header__register' to='/'><span>Bienvenu</span></Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ProjectDetails.js",["102","103","104"],"import React, { useState, useEffect } from 'react'\r\nimport './ProjectDetails.css'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport ProgressBar from 'react-customizable-progressbar'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport { Card } from 'react-bootstrap';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport CommentIcon from '@material-ui/icons/Message';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { useStateValue } from './StateProvider';\r\nimport UpdateProject from './UpdateProject';\r\n\r\nfunction ProjectDetails() {\r\n\r\n    var getSelectedValues =  function(e) {\r\n        let value = Array.from(e.target.selectedOptions, option => option.value);\r\n            setProject_Team(value.join())\r\n    };\r\n\r\n    const [project, dispatch] = useStateValue()\r\n    const [Engineers, setEngineers] = useState([]);\r\n    const [Employees, setEmployees] = useState([]);\r\n    const [Project, setProject] = useState([]);\r\n    \r\n    const [progress_Title, setProgress_Title] = useState(\"\");\r\n    const [progress, setProgress] = useState(\"\");\r\n    const [Project_progress, setProject_progress] = useState([]);\r\n    const [Clients, setClients] = useState([]);\r\n    const [Project_Team, setProject_Team] = useState(\"\");\r\n\r\n    const [Subject, setSubject] = useState(\"\");\r\n    const [Subject_Description, setSubject_Description] = useState(\"\");\r\n    const { project_id } = useParams();\r\n\r\n    const account_type = window.localStorage.getItem('type')\r\n    const addProgress = (e) => {\r\n        e.preventDefault()\r\n        Axios.post(`http://localhost:3001/api/progress/add`, {\r\n            Project_Id: project_id,\r\n            Progress_Title: progress_Title,\r\n            Progress: progress\r\n        })\r\n        .then((result) => {\r\n            console.log('Here is the result ==> ', result)\r\n        })\r\n        .catch(err => {console.log(\"An Error, \", err)})\r\n    }\r\n\r\n    const getClients = () => {\r\n        Axios.get(\"http://localhost:3001/api/clients\")\r\n        .then((response) => {\r\n            // console.log(response.data[0])\r\n            setClients(response.data)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getEmployees = () => {\r\n        Axios.get(`http://localhost:3001/api/employees`)\r\n        .then((response) => {\r\n            setEmployees(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getprojectprogress = (id) => {\r\n        id = project_id\r\n        Axios.get(`http://localhost:3001/api/progress/${id}`)\r\n        .then((response) => {\r\n            console.log('here ', response.data)\r\n            setProject_progress(response.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getEngineers= (id) => {\r\n        id = project_id\r\n        Axios.get(`http://localhost:3001/api/employees_project/${id}`)\r\n        .then((response) => {\r\n            console.log(response.data)\r\n            setEngineers(response.data)\r\n        })  \r\n    }\r\n\r\n    const getProject = (id) => {\r\n        id = project_id\r\n        Axios.get(`http://localhost:3001/api/project/${id}`)\r\n        .then((response) => {\r\n            setProject(response.data)\r\n            dispatch({\r\n            type: 'SET_CURRENT_PROJECT',\r\n            item: {\r\n                Project_Id: Project.Project_Id,\r\n                Project_Name: Project.Project_Name,\r\n                Project_SubType: Project.Project_SubType,\r\n                Project_Author: Project.Project_Author,\r\n                Project_Description: Project.Project_Description,\r\n                StartDate: Project.StartDate,\r\n                EndDate: Project.EndDate\r\n            }\r\n        })\r\n        })\r\n    }\r\n\r\n    let date1 = new Date (Project.StartDate)\r\n    let date2 = new Date (Project.EndDate)\r\n    let today = new Date()\r\n\r\n    // console.log(today, date2)\r\n    const getDifferenceInDays = (diffInDays) => {\r\n        // const diffInDays = Math.abs(today - date2);\r\n        let absdiffInDays = Math.abs(diffInDays)\r\n        return Math.floor(absdiffInDays / (1000 * 60 * 60 * 24));\r\n    }\r\n    const overdue = () => {\r\n        const diffInDays = (date2 - today);\r\n        if (diffInDays < 0) {\r\n            let numberofdays = getDifferenceInDays(diffInDays)\r\n            return \"Projet en retard par \" + numberofdays + ' Jour(s)'\r\n        } else if(diffInDays > 0) {\r\n            return getDifferenceInDays(diffInDays) + ' Jour(s) restant pour terminer le projet'\r\n        } else {\r\n            return \"Le projet doit se terminer aujourd'hui\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProject();\r\n        getEmployees();\r\n        getEngineers();\r\n        getClients();\r\n        getprojectprogress();\r\n    }, []);\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        Axios.post(`http://localhost:3001/api/comment/add`, {\r\n            Project_Id: project_id,\r\n            Authors_Id: window.localStorage.getItem('id'),\r\n            Subject: Subject,\r\n            Description: Subject_Description,\r\n            Comment_Date: new Date().toISOString().slice(0, 10),\r\n        })\r\n        .then((response) => {\r\n            console.log(response)\r\n            setSubject('')\r\n            setSubject_Description('')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    \r\n    const addprojectTeam = (e) => {\r\n        e.preventDefault()\r\n            Axios.post(`http://localhost:3001/api/employee-project/add`, {\r\n                Employee_ID: Project_Team,\r\n                Project_ID: project_id,\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div  className='projectdetails'>\r\n                <div className=\"projectdetails__row\">\r\n                    <div className=\"projectdetails__image\">\r\n                        <img src=\"/assets/images/logo-minimal-md.png\" alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"projectdetails__detail\">\r\n                        <p className='projectdetails__id'>Project_Id: {Project.Project_Id}</p>\r\n                        <p className='projectdetails__title'>{Project.Project_Name} (Status:  )</p>\r\n                        <div className=\"projectdetails__engineers\">\r\n                            \r\n                            <p  className='projectdetails__info'> {Project.Project_Description}   elementum pulvinar etiam non quam lacus suspendisse faucibus\r\n                            interdum posuere lorem ipsum dolor sit amet consectetur adipiscing \r\n                            elit duis tristique sollicitudin nibh sit amet commodo nulla facilisi\r\n                            nullam vehicula ipsum a arcu cursus vitae congue mauris rhoncus\r\n                            aenean vel elit scelerisque mauris pellentesque pulvinar pellentesque\r\n                            tant morbi tristique senectus et</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Link to='/projects'><button className='projectdetails__button'>Retour</button></Link>\r\n            </div>\r\n            <div className=\"projectdetails__details\">\r\n                <div className='first_column'>\r\n                    <div>\r\n                        <h2 className='heading'>{overdue()}</h2>  \r\n                        <ProgressBar\r\n                            progress={60}\r\n                            radius={80}\r\n                            strokeColor=\"rgb(2, 137, 2)\"\r\n                            trackStrokeWidth={8}\r\n                            strokeWidth={8}\r\n                        />\r\n                        <div>\r\n                            <div  className=\"indicator\">{60}%</div>\r\n                            <p className='indicator_paragraph'> Percentage Complete</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h4><GroupIcon />&nbsp;Membres de l'équipe</h4>\r\n                        {Engineers.length > 1 && \r\n                            Engineers.map(engineer => (\r\n                                <p><CheckIcon /> {engineer} </p>\r\n                            ))\r\n                        }\r\n                        {Engineers.length < 1 && \r\n                            <p> Une équipe n'a pas encore été affectée à ce projet </p>\r\n                        }\r\n                        {account_type === 'Employee' && \r\n                        <Accordion className='addTeam'>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\r\n                                   <PlaylistAddIcon /> Ajouter un membre de l'équipe\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <form className='card__form'>\r\n                                        <label>Ajouter des ingénieurs</label>\r\n                                        <select multiple size='5' onChange={getSelectedValues} >\r\n                                            <option> -- Default -- </option>\r\n                                            {Employees.map(employees => (\r\n                                                <option\r\n                                                    value = {employees.id}\r\n                                                >{employees.Employee_Name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button className='progress__button' onClick={addprojectTeam}>sauvegarder</button>\r\n                                    </form>\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                        }\r\n                    </div>\r\n                    <div className='accordion'>\r\n                        <Accordion>\r\n                        {account_type === 'Employee' && \r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\r\n                                   <PlaylistAddIcon /> Ajouter le déroulement du projet\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <form className='card__form'>\r\n                                        <label>Ajouter un titre</label>\r\n                                        <input type=\"text\" onChange={(event) => {\r\n                                            setProgress_Title(event.target.value)}}/>\r\n                                        <label>La description</label>\r\n                                        <textarea cols=\"25\" rows=\"5\" onChange={(event) => {\r\n                                            setProgress(event.target.value)}}></textarea>\r\n                                        <button className='progress__button' onClick={addProgress}>Sauvegarder</button>\r\n                                    </form>\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        }\r\n                            <Card>\r\n                                <Accordion.Toggle className='accordion_header' as={Card.Header} eventKey=\"1\">\r\n                                <ExpandMoreIcon />Données de progress\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse eventKey=\"1\">\r\n                                <Card.Body>\r\n                                    {Project_progress.length < 1 &&\r\n                                        <div className='progress_data'>\r\n                                            <ul>\r\n                                                <li>Désolé, rien à afficher pour le moment</li>\r\n                                            </ul>\r\n                                        </div> \r\n                                    }\r\n\r\n                                    {Project_progress.length > 1 &&\r\n                                    <ul>\r\n                                        {Project_progress.map(data => (\r\n                                            <div className='progress_data'>\r\n                                                <h5> <CheckCircleOutlineIcon /> {data.Progress_Title}</h5>\r\n                                                <li> {data.Progress}</li>\r\n                                            </div>\r\n                                        ))}\r\n                                    </ul>\r\n                                    }\r\n                                </Card.Body>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </div>\r\n                </div>\r\n                <div className='second_column'>\r\n                    <h2 className='message_heading'>Vos réflexions sur le projet</h2>\r\n                    <form className='updateProject__form'>\r\n                        <label><SubjectIcon /> le sujet</label>\r\n                        <input type=\"text\" onChange={(event) => {\r\n                            setSubject(event.target.value)}}/>\r\n\r\n                        <label><CommentIcon /> Votre message </label>\r\n                        <textarea cols=\"30\" rows=\"5\" type=\"text\" onChange={(event) => {\r\n                            setSubject_Description(event.target.value)}}>\r\n                        </textarea>\r\n                        <button onClick={submitForm} className='newProgress' type='submit'>Soumettre</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            { account_type === 'Employee' && \r\n                <UpdateProject\r\n                    project_id = {project_id}\r\n                    Project_Name = {project.Project_Name}\r\n                    Project_Type = {project.Project_Type}\r\n                    Project_SubType = {project.Project_SubType}\r\n                    Project_Description = {project.Project_Description}\r\n                    Project_Author = {project.Project_Author}\r\n                    StartDate = {project.StartDate}\r\n                    EndDate = {project.EndDate}\r\n                />\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Project.js",["105","106","107"],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\StateProvider.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ProjectData.js",["108","109"],"import React, { useState } from 'react';\r\nimport './ProjectData.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { useStateValue } from './StateProvider';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nfunction ProjectData({Project_Id, Project_Title, Project_Description}) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {\r\n        if(window.localStorage.getItem('loggedIn')== null) {\r\n            setShow(true);\r\n        } else {\r\n            getProject(Project_Id)\r\n        }\r\n    }\r\n    const [{project}, dispatch ] = useStateValue();\r\n\r\n    const getProject = (id) => {\r\n            id = Project_Id\r\n            Axios.get(`http://localhost:3001/api/project/${id}`)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                dispatch({\r\n                type: 'SET_CURRENT_PROJECT',\r\n                item: {\r\n                    project: response.data\r\n                }\r\n            })\r\n                history.push(`/projectdetails/${id}`);\r\n            })\r\n    }\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"projectList__card\">\r\n                <div className=\"projectList__image\">\r\n                    <img src=\"assets/images/logo-minimal-md.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"projectList__info\">\r\n                    <h5 className='project__title'>{Project_Title}</h5>\r\n                    <p className=\"project__intro\">\r\n                        {Project_Description}\r\n                    </p>\r\n                    <span type='button' onClick={getProject, handleShow} className='project__details'>Plus</span>\r\n                  \r\n                        <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n                            <Modal.Header closeButton>\r\n                            <Modal.Title className='modal__heading'>Message From Altechs Engineering</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body className='modal__body'>\r\n                                Please <Link className='modal__link' to='/login'>Sign in</Link>  to Your account to view details of each project.\r\n                                In case you don't have an account, you can create your account <Link className='modal__link' to='/register'>Here.</Link>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button className='modal__button' onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectData","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Reducer.js",["110"],"export const initialState = {\r\n    project: [],\r\n    projects: [],\r\n    user: []\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'SET_CURRENT_PROJECT':\r\n            return {\r\n                ...state,\r\n                project: [action.item],\r\n            }\r\n        case 'SET_PROJECTS':\r\n            return {\r\n                ...state,\r\n                projects: [action.item],\r\n            }\r\n        case 'REMOVE_CURRENT_PROJECT': \r\n            return {\r\n                ...state,\r\n                project: []\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: [action.user]\r\n            }\r\n        }\r\n};\r\n\r\nexport default reducer;","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\AddProject.js",["111","112"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport './AddProject.css';\r\nimport Axios from 'axios';\r\n\r\nfunction AddProject() {\r\n\r\n    const [Clients, setClients] = useState([]);\r\n    const [Project_Name, setProject_Name] = useState(\"\");\r\n    const [Project_Type, setProject_Type] = useState(\"\");\r\n    const [Project_SubType, setProject_SubType] = useState(\"None\");\r\n    const [StartDate, setStartDate] = useState(\"\");\r\n    const [EndDate, setEndDate] = useState(\"\");\r\n    const [Project_status, setProject_status] = useState(0);\r\n    const [Project_Description, setProject_Description] = useState(\"\");\r\n    const [Completion_Rate, setCompletion_Rate] = useState(0);\r\n    const [Project_Author, setProject_Author] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    var getSelectedValues =  function(e) {\r\n        let value = Array.from(e.target.selectedOptions, option => option.value);\r\n            setProject_SubType(value.join())\r\n    };\r\n    console.log(Project_SubType)\r\n    const getClients = () => {\r\n        Axios.get(\"http://localhost:3001/api/clients\")\r\n        .then((response) => {\r\n            console.log(response.data[0])\r\n            setClients(response.data)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault()\r\n        Axios.post(\"http://localhost:3001/api/project/add\", {\r\n        Project_Name: Project_Name,\r\n        Project_Type: Project_Type,\r\n        Project_SubType: Project_SubType,\r\n        StartDate: StartDate,\r\n        EndDate: EndDate,\r\n        Project_status: Project_status,\r\n        Project_Description: Project_Description,\r\n        Completion_Rate: Completion_Rate,\r\n        Project_Author: Project_Author\r\n        })\r\n        .then((response) => {\r\n            console.log(response)\r\n            history.push('/projects')\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getClients();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='addProject'>\r\n            <div className='addPoject__details'>\r\n                <h2 className='addProject__heading'>Nouveau projet</h2>\r\n                <form className='addProject__form'>\r\n                    <label>Sélectionnez le type de projet</label>\r\n                    <select onChange={(event) => {\r\n                        setProject_Type(event.target.value);}} name=\"project_type\">\r\n                        <option> -- Select -- </option>\r\n                        <option value=\"Andriod-IOS-Desktop\">Andriod-IOS-Desktop</option>\r\n                        <option value=\"Graphic Design\">Graphic Design</option>\r\n                        <option value=\"Wordpress Development\">Wordpress Development</option>\r\n                        <option value=\"Full Stack Web Development\">Full Stack Web Development</option>\r\n                    </select>\r\n                    { Project_Type ==='Graphic Design' &&\r\n                        <div className='project__subtype'>\r\n                            <label>Sélectionnez le sous-type</label>\r\n                            <span>Maintenez la touche Ctrl enfoncée et sélectionnez les options</span> \r\n                            <select multiple size='7' onChange={getSelectedValues} name=\"project_type\">\r\n                                <option value=\"Logo Design\">Logo Design</option>\r\n                                <option value=\"Brochures\">Brochures</option>\r\n                                <option value=\"Wordpress Development\">Wordpress Development</option>\r\n                                <option value=\"Full Stack Web Development\">Full Stack Web Development</option>\r\n                            </select>\r\n                        </div>\r\n                    }\r\n\r\n                    <label>Nom du Projet</label>\r\n                    <input type=\"text\" onChange={(event) => {\r\n                        setProject_Name(event.target.value)}}/>\r\n                    \r\n                    <label>Choisissez l'auteur du Projet</label>\r\n                    <select onChange={(event) => {\r\n                        setProject_Author(event.target.value)}} name=\"project_type\">\r\n                        <option> -- Default -- </option>\r\n                        {Clients.map(client => (\r\n                            <option\r\n                                value = {client.Client_Id}\r\n                            >{client.Client_Name}</option>\r\n                        ))}\r\n                    </select>\r\n                    <span className='project__author_message'>Client introuvable?, <Link className='project__author_message_link' to='register'>Veuillez créer un compte client ici</Link></span>\r\n\r\n                    <label>Début de projet</label>\r\n                    <input type=\"date\" onChange={(event) => {\r\n                        setStartDate(event.target.value)}}/>\r\n\r\n                    <label>Fin de Projet</label>\r\n                    <input type=\"date\" onChange={(event) => {\r\n                        setEndDate(event.target.value)}}/>\r\n\r\n                    <label>Description du projet</label>\r\n                    <textarea cols=\"30\" rows=\"5\" type=\"text\" onChange={(event) => {\r\n                        setProject_Description(event.target.value)}}>\r\n                    </textarea>\r\n\r\n                    <button onClick={submitForm} className='newProject' type='submit'>Créer le projet</button>\r\n                </form>\r\n            </div>\r\n            <div className='addProject__image'>\r\n                <img src=\"/assets/images/new project.jpg\" alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProject\r\n","C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\UpdateProject.js",["113","114","115","116","117"],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\EmployeeTable.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\Clients.js",[],"C:\\Users\\SONNA\\desktop\\company-management\\client\\src\\components\\ClientTable.js",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":25,"column":40,"nodeType":"125","messageId":"126","endLine":25,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":47,"column":40,"nodeType":"125","messageId":"126","endLine":47,"endColumn":42},{"ruleId":"127","severity":1,"message":"128","line":6,"column":16,"nodeType":"129","messageId":"130","endLine":6,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":11,"column":14,"nodeType":"129","messageId":"130","endLine":11,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":20,"column":8,"nodeType":"134","endLine":20,"endColumn":10,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"136","line":42,"column":11,"nodeType":"129","messageId":"130","endLine":42,"endColumn":22},{"ruleId":"127","severity":1,"message":"137","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":37},{"ruleId":"132","severity":1,"message":"138","line":15,"column":8,"nodeType":"134","endLine":15,"endColumn":10,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"140","line":9,"column":13,"nodeType":"129","messageId":"130","endLine":9,"endColumn":17},{"ruleId":"127","severity":1,"message":"141","line":33,"column":12,"nodeType":"129","messageId":"130","endLine":33,"endColumn":19},{"ruleId":"127","severity":1,"message":"142","line":116,"column":9,"nodeType":"129","messageId":"130","endLine":116,"endColumn":14},{"ruleId":"132","severity":1,"message":"143","line":144,"column":8,"nodeType":"134","endLine":144,"endColumn":10,"suggestions":"144"},{"ruleId":"127","severity":1,"message":"128","line":7,"column":16,"nodeType":"129","messageId":"130","endLine":7,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":12,"column":14,"nodeType":"129","messageId":"130","endLine":12,"endColumn":22},{"ruleId":"132","severity":1,"message":"138","line":16,"column":8,"nodeType":"134","endLine":16,"endColumn":10,"suggestions":"145"},{"ruleId":"127","severity":1,"message":"146","line":19,"column":13,"nodeType":"129","messageId":"130","endLine":19,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":48,"column":60,"nodeType":"149","messageId":"150","endLine":48,"endColumn":61},{"ruleId":"151","severity":1,"message":"152","line":8,"column":5,"nodeType":"153","messageId":"154","endLine":29,"endColumn":10},{"ruleId":"127","severity":1,"message":"155","line":14,"column":28,"nodeType":"129","messageId":"130","endLine":14,"endColumn":45},{"ruleId":"127","severity":1,"message":"156","line":16,"column":29,"nodeType":"129","messageId":"130","endLine":16,"endColumn":47},{"ruleId":"127","severity":1,"message":"157","line":22,"column":12,"nodeType":"129","messageId":"130","endLine":22,"endColumn":21},{"ruleId":"127","severity":1,"message":"158","line":29,"column":26,"nodeType":"129","messageId":"130","endLine":29,"endColumn":41},{"ruleId":"127","severity":1,"message":"159","line":30,"column":12,"nodeType":"129","messageId":"130","endLine":30,"endColumn":29},{"ruleId":"127","severity":1,"message":"160","line":31,"column":12,"nodeType":"129","messageId":"130","endLine":31,"endColumn":27},{"ruleId":"127","severity":1,"message":"161","line":55,"column":11,"nodeType":"129","messageId":"130","endLine":55,"endColumn":23},{"ruleId":"127","severity":1,"message":"162","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":13},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'projects' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'getProjects' is assigned a value but never used.","'SentimentVeryDissatisfiedIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.",["166"],"'Name' is assigned a value but never used.","'Clients' is assigned a value but never used.","'date1' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getEngineers', 'getProject', and 'getprojectprogress'. Either include them or remove the dependency array.",["167"],["168"],"'project' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setProject_status' is assigned a value but never used.","'setCompletion_Rate' is assigned a value but never used.","'Employees' is assigned a value but never used.","'setProject_Team' is assigned a value but never used.","'Project_startDate' is assigned a value but never used.","'Project_endDate' is assigned a value but never used.","'getEmployees' is assigned a value but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"171","fix":"175"},"Update the dependencies array to be: [getProject]",{"range":"176","text":"177"},"Update the dependencies array to be: [getProjects]",{"range":"178","text":"179"},"Update the dependencies array to be: [getEngineers, getProject, getprojectprogress]",{"range":"180","text":"181"},{"range":"182","text":"179"},[626,628],"[getProject]",[473,475],"[getProjects]",[5058,5060],"[getEngineers, getProject, getprojectprogress]",[440,442]]